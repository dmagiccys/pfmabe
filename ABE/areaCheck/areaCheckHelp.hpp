/*****************************************************************************\

    This program is public domain software that was developed by 
    the U.S. Naval Oceanographic Office.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

\*****************************************************************************/

using namespace std;  // Windoze bullshit - God forbid they should follow a standard


QString exitSaveText = 
  areaCheck::tr ("<img source=\":/icons/exit_save.xpm\"> Click this button to exit after saving changes to all "
                 "area or zone files that have been modified.");

QString exitNoSaveText = 
  areaCheck::tr ("<img source=\":/icons/exit_no_save.xpm\"> Click this button to exit without saving any changes "
                 "to area or zone files that have been modified.");

QString fileText = 
  areaCheck::tr ("<img source=\":/icons/fileopen.xpm\"> Click this button to open input files.");

QString zoomOutText = 
  areaCheck::tr ("<img source=\":/icons/icon_zoomout.xpm\"> Click this button to zoom out one level.");
QString zoomInText = 
  areaCheck::tr ("<img source=\":/icons/icon_zoomin.xpm\"> Click this button to define a rectangular zoom area.  "
                 "After clicking the button the cursor will change to the zoom cursor "
                 "<img source=\":/icons/zoom_cursor.xpm\">.  "
                 "Click the left mouse button to define a starting point for a rectangle.  Move the mouse to "
                 "define the zoom in bounds.  To finish and zoom in, simply click the left mouse button again.  To "
                 "abort the zoom in operation click the middle mouse button or right click and select an option from "
                 "the menu.");

QString coastText = 
  areaCheck::tr ("<img source=\":/icons/coast.xpm\"> Click this button to toggle the display of coastline on and off.");

QString maskText = 
  areaCheck::tr ("<img source=\":/icons/landmask.xpm\"> Click this button to toggle the display of the landmask on and "
                 "off.  Note that the landmask will only be plotted if the displayed area is less than 5 degrees in both "
                 "latitude and longitude.  The SRTM_DATA environment variable must also be set to point to the "
                 "directory containing the srtm_mask.clm file.");

QString prefsText = 
  areaCheck::tr ("<img source=\":icons/prefs.xpm\"> Click this button to change program preferences.");


QString stopText = 
  areaCheck::tr ("<img source=\":icons/stop.xpm\"> Click this button to cancel drawing.");


QString mapText = 
  areaCheck::tr ("The areaCheck program is used to display and edit ISS60 and generic area and zone files, "
                 "Army Corps area files.  It can also be used to display track files generated by the XXXXX_trackline "
		 "programs, GeoTIFF files, ESRI polygon shape files, Binary Feature Data (.bfd) files, LLZ files, "
		 "YXZ files, CHRTR .fin files, CHRTR2 .ch2 files, and (optionally) BAG files.  Loading area, zone, or track files is as simple "
                 "as clicking on the <img source=\":icons/fileopen.xpm\"> icon and then selecting the desired file or "
		 "files.  Context sensitive help is available for all actions by "
		 "using the What's This button <img source=\":icons/contextHelp.xpm\">.<br><br>"
                 "The default action for the program is zoom in <img source=\":icons/icon_zoomin.xpm\">.  No editing "
                 "functions will be available until one or more zone or area files are loaded.  Upon exit, if zones or "
                 "areas have been modified but not saved you will be prompted to determine if you wish to save them.");

QString areaCheckAboutText = 
  areaCheck::tr ("<center><br>areaCheck<br><br>"
                 "Author : Jan C. Depner (depnerj@navo.navy.mil)<br>"
                 "Date : 26 June 2005<br><br></center>") + mapText;

QString acknowledgementsText = 
  areaCheck::tr ("<center><br>areaCheck was built using most, if not all, of the following Open Source libraries:"
                 "<br><br></center>"
                 "<ul>"
                 "<li><a href=\"http://www.qtsoftware.com/qt\">Qt</a> - A cross-platform application and UI framework</li>"
                 "<li><a href=\"http://www.gdal.org\">GDAL</a> - Geospatial Data Abstraction Library</li>"
                 "<li><a href=\"http://trac.osgeo.org/proj\">PROJ.4</a> - Cartographic Projections Library</li>"
                 "<li><a href=\"http://xerces.apache.org/xerces-c\">XERCES</a> - Validating XML parser libary</li>"
                 "<li><a href=\"http://shapelib.maptools.org\">SHAPELIB</a> - Shapefile C Library</li>"
                 "<li><a href=\"http://www.zlib.net\">ZLIB</a> - Compression Library</li>"
                 "<li><a href=\"http://www.alglib.net\">LEASTSQUARES</a> - Least squares math library</li>"
                 "<li><a href=\"http://liblas.org\">LIBLAS</a> - LAS I/O library</li>"
                 "<li><a href=\"http://www.hdfgroup.org/HDF5\">HDF5</a> - Heirarchical Data Format library</li>"
                 "</ul><br>"
                 "<ul>"
                 "<li>Qt and SHAPELIB are licensed under the <a href=\"http://www.gnu.org/copyleft/lesser.html\">GNU LGPL</a></li>"
                 "<li>GDAL is licensed under an X/MIT style open source license</li>"
                 "<li>PROJ.4 is licensed under an MIT open source license</li>"
                 "<li>XERCES is licensed under the Apache Software License</li>"
                 "<li>ZLIB, LEASTSQUARES, LIBLAS, and HDF5 are licensed under their own open source license</li>"
                 "</ul><br><br>"
                 "Many thanks to the authors of these and all of their supporting libraries.  For more information on "
                 "each library please visit their websites using the links above.<br>"
                 "<center>Jan C. Depner<br><br></center>");

QString rectText = 
  areaCheck::tr ("<img source=\":icons/edit_rect.xpm\"> This button allows the user to define a rectangular area and "
                 "output it to an area or zone file (*.ARE, *.are, *.zne, *.ZNE, *.tdz).  When selected the cursor will "
                 "become the define rectangle cursor <img source=\":icons/edit_rect_cursor.xpm\">.  Left clicking on a "
                 "location will cause that point to be the rectangle anchor point.  Moving the cursor will cause a "
                 "rectangle to appear.  To finalize the rectangle left click on a location.  At that time a file "
                 "selection dialog will pop up.  Enter a file name or use a preexisting file.  File type will be defined "
                 "by the filter (*.ARE, *.are, *.zne, *.ZNE, *.tdzs must have a .are extension.  If you do not put an "
                 "extension on the file it will be appended automatically.  If, at any time during the operation you wish "
                 "to discard the rectangle and abort the operation simply click the middle mouse button.");

QString polyText = 
  areaCheck::tr ("<img source=\":icons/edit_poly.xpm\"> This button allows the user to define a polygonal area and output "
                 "it to an area or zone file (*.ARE, *.are, *.zne, *.ZNE, *.tdz).  When selected the cursor will become "
                 "the define polygon cursor <img source=\":icons/edit_poly_cursor.xpm\">.  Left clicking on a location "
                 "will cause that point to be a polygon vertex.  Moving the cursor will cause a line to appear.  Select "
                 "the next vertex by left clicking on a location again.  Select as many points as needed.  To select the "
                 "last point double click on its location.  At that time a file selection dialog will pop up.  Enter a "
                 "file name or use a preexisting file.  File type will be defined by the filter (*.ARE, *.are, "
                 "*.zne, *.ZNE, *.tdz).  If you do not put an extension on the file it will be appended automatically.  "
                 "If, at any time during the operation you wish to discard the rectangle and abort the operation simply "
                 "click the middle mouse button.");

QString addVertexText = 
  areaCheck::tr ("<img source=\":icons/add_vertex.xpm\"> This button allows the user to add a vertex to an area.  When "
                 "the button is pressed the cursor will become the add vertex cursor "
                 "<img source=\":icons/add_vertex_cursor.xpm\"> and the nearest line to the cursor will be highlighted "
                 "(Hint: move the cursor close to the vertices of the area).  When the desired line segment is "
                 "highlighted press the left mouse button to add a point to the line.  When pressed the cursor will "
                 "become the cross cursor and a dot will follow the cursor.  When the dot is in the desired location "
                 "press the left mouse button to add it to the highlighted line segment.  Press the middle mouse button "
                 "to discard the point.");

QString deleteVertexText = 
  areaCheck::tr ("<img source=\":icons/delete_vertex.xpm\"> This button allows the user to delete a vertex from an area.  "
                 "When the button is pressed the cursor will become the delete vertex cursor "
                 "<img source=\":icons/delete_vertex_cursor.xpm\"> and the nearest vertex to the cursor will be "
                 "highlighted.  When the desired vertex is highlighted press the left mouse button to delete the vertex.");

QString moveVertexText = 
  areaCheck::tr ("<img source=\":icons/move_vertex.xpm\"> This button allows the user to move a vertex in an area.  When "
                 "the button is pressed the cursor will become the move vertex cursor "
                 "<img source=\":icons/move_vertex_cursor.xpm\"> and the nearest vertex to the cursor will be "
                 "highlighted.  When the desired vertex is highlighted press the left mouse button to select the vertex.  "
                 "The cursor will become the cross cursor and a dot will appear at the cursor.  Move the cursor/dot to "
                 "the desired new location for the highlighted vertex and press the left mouse button to place the "
                 "vertex.  To discard the point click the right mouse button.");

QString editVertexText = 
  areaCheck::tr ("<img source=\":icons/edit_vertex.xpm\"> This button allows the user to manually edit a vertex location "
                 "for an area.  When the button is pressed the cursor will become the edit vertex cursor "
                 "<img source=\":icons/edit_vertex_cursor.xpm\"> and the nearest vertex to the cursor will be "
                 "highlighted.  When the desired vertex is highlighted press the left mouse button to pop up the edit "
                 "widget.  The latitude and longitude of the vertex will be in the position format defined in the "
                 "preferences dialog.  You may use any of the standard position formats:<br><br>"
                 "<ul>"
                 "<li>Hemisphere Degrees decimal                 : S 28.4532</li>"
                 "<li>Hemisphere Degrees minutes decimal         : S 28 27.192</li>"
                 "<li>Hemisphere Degrees minutes seconds decimal : S 28 27 11.52</li>"
                 "<li>Signed Degrees decimal                 : -28.4532</li>"
                 "<li>Signed Degrees minutes decimal         : -28 27.192</li>"
                 "<li>Signed Degrees minutes seconds decimal : -28 27 11.52</li>"
                 "</ul>"
                 "West longitude and south latitude are negative :<br><br>"
                 "Press the <b>Apply</b> button to apply the change.  Press <b>Cancel</b> button to discard the changes.");

QString moveAreaText = 
  areaCheck::tr ("<img source=\":icons/move_area.xpm\"> This button allows the user to move an area.  When the button is "
                 "pressed the cursor will become the move area cursor <img source=\":icons/move_area_cursor.xpm\"> and "
                 "the nearest area to the cursor will be highlighted.  (Hint: move the cursor close to one of the "
                 "vertices of the area).  When the desired area is highlighted press the left mouse button to select the "
                 "area.  You may then move the area to the desired location and press the left mouse button to place the "
                 "area.  To discard the move click the middle mouse button or right click and select an option from the "
                 "menu.");

QString copyAreaText = 
  areaCheck::tr ("<img source=\":icons/copy_area.xpm\"> This button allows the user to copy an area.  When the button is "
                 "pressed the cursor will become the copy area cursor <img source=\":icons/copy_area_cursor.xpm\"> and "
                 "the nearest area to the cursor will be highlighted.  (Hint: move the cursor close to one of the "
                 "vertices of the area).  When the desired area is highlighted press the left mouse button to select the "
                 "area.  You may then move the duplicate area to the desired location and press the left mouse button to "
                 "place the area.  A file selection dialog will appear to allow you to place the new area/zone file "
                 "wherever you wish.  To discard the move click the middle mouse button or right click to select an "
                 "option from the menu.");

QString linkText = 
  areaCheck::tr ("<img source=\":/icons/unlink.xpm\"> Click this button to choose from other ABE or geographical GUI "
		 "programs to connect to.  At present the only possible applications are pfmView, geoSwath, and "
		 "areaCheck.  Hopefully, in the near future, we will be adding CNILE to the list.  The connection "
		 "allows cursor tracking and limited data exchange between the applications.  If there are no "
		 "available ABE groups to link to you can create a new group and add yourself to it so that other "
		 "applications can link to this one.");

QString unlinkText = 
  areaCheck::tr ("<img source=\":/icons/link.xpm\"> Click this button to disconnect from another ABE or "
		 "geographical GUI program.  This option is not available unless you have already linked to another "
		 "program.");

QString statusBarText = 
  areaCheck::tr ("The status bar displays information about cursor position in the "
                 "main window.  Most of the fields are fixed with the exception of the far right "
                 "field.  This is used for miscellaneous messages.");

