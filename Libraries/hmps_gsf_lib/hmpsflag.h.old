/********************************************************************
 *
 * Module Name : HMPSFLAGS
 *
 * Author/Date : J. S. Byrne / 13 Mar 1995
 *
 * Description : This file contains the ping and beam bit flag definitions
 *    used by the HMPS processing software when dealing with GSF data files.
 *
 * Restrictions/Limitations :
 *
 * Change Descriptions :
 * who	when	  what
 * ---	----	  ----
 *
 *
 * Classification : Unclassified
 *
 * References :
 *
 *
 * Copyright (C) Science Applications International Corp.
 ********************************************************************/
#ifndef     _HMPS_FLAGS_
    #define _HMPS_FLAGS_

    #include "gsf.h"

    /* If BAD_PING is set set and nothing else is set then the whole ping
     * had no bottom detections made, other wise decode the other bit(s) set
     * to determine why this is a bad ping.
     */
    #define HMPS_IGNORE_PING		GSF_IGNORE_PING
    #define HMPS_OFF_LINE_PING		GSF_PING_USER_FLAG_01
    #define HMPS_BAD_TIME		GSF_PING_USER_FLAG_02
    #define HMPS_BAD_POSITION		GSF_PING_USER_FLAG_03
    #define HMPS_BAD_HEADING		GSF_PING_USER_FLAG_04
    #define HMPS_BAD_ROLL		GSF_PING_USER_FLAG_05
    #define HMPS_BAD_PITCH		GSF_PING_USER_FLAG_06
    #define HMPS_BAD_HEAVE		GSF_PING_USER_FLAG_07
    #define HMPS_BAD_DEPTH_CORRECTOR	GSF_PING_USER_FLAG_08
    #define HMPS_BAD_TIDE_CORRECTOR	GSF_PING_USER_FLAG_09
    #define HMPS_BAD_SVP		GSF_PING_USER_FLAG_10
    #define HMPS_NO_POSITION		GSF_PING_USER_FLAG_11
    /*	These are spare bits
    #define				GSF_PING_USER_FLAG_12
    #define				GSF_PING_USER_FLAG_13
    #define				GSF_PING_USER_FLAG_14
    #define				GSF_PING_USER_FLAG_15
     */

    /* The eight bit beam flag value is divided into two four bit
     * fields. The lower order four bits are used to specify that
     * a beam be ignored, where the value specifies the reason the
     * the beam is to be ignored. The higher order four bits are
     * usedto specify that a beam is selected, where the value specifies
     * the reason why the beam is selected.
     *
     *------------------------------------------------------------
     *
     * Category 00 (HMPS_INFORMATIONAL)
     * xxx1xx00 => This beam does not meet one times IHO accuracy
     *
     * Category 01 (HMPS_IGNORE)
     * 00000001 => This beam is to be ignored, no detection was made by the sonar
     * xxxxx101 => This beam is to be ignored, it has been manually edited
     * xxxx1x01 => This beam is to be ignored, it has been filter edited
     * xx1xxx01 => This beam is to be ignored, since it exceeds two times IHO
     * x1xxxx01 => This beam is to be ignored, since it exceeds the maximum footprint
     * 1xxxxx00 => Spare bit field
     *
     * Category 10 (HMPS_SELECT)
     * 00000010 => Selected sounding, no reason specified
     * xxxxx110 => Selected sounding, it is a least depth
     * xxxx1x10 => Selected sounding, it is a maximum depth
     * xxx1xx10 => Selected sounding, average depth
     * xx1xxx10 => Selected sounding, it has been identified as a side scan contact
     * x1xxxx10 => Selected sounding, spare ....
     * 1xxxxx10 => Selected sounding, spare ....
     */

     /* Definitions for the categories */
     #define HMPS_INFORMATIONAL      1
     #define HMPS_IGNORE	     2
     #define HMPS_SELECT	     3

     /* Definitions for HMPS_INFORMATIONAL category */
     #define HMPS_INFO_NOT_1X_IHO	    0x10
     #define HMPS_INFO_BIT_MASK 	    0x10

     /* Definitions for HMPS_IGNORE category */
     #define HMPS_IGNORE_NULL_BEAM	    0x01  /* 0x00 & 0x01 */
     #define HMPS_IGNORE_MANUALLY_EDITED    0x05  /* 0x04 & 0x01 */
     #define HMPS_IGNORE_FILTER_EDITED	    0x09  /* 0x08 & 0x01 */
     #define HMPS_IGNORE_NOT_2X_IHO	    0x21  /* 0x20 & 0x01 */
     #define HMPS_IGNORE_FOOTPRINT_TOO_BIG  0x41  /* 0x40 & 0x01 */
     #define HMPS_SPARE_1		    0x80
     #define HMPS_IGNORE_BIT_MASK	    0xec  /* combination of reason bits */

     /* Definitions for the HMPS_SELECT category */
     #define HMPS_SELECTED		    0x02  /* 0x00 & 0x02 */
     #define HMPS_SELECTED_LEAST	    0x06  /* 0x04 & 0x02 */
     #define HMPS_SELECTED_MAXIMUM	    0x0a  /* 0x08 & 0x02 */
     #define HMPS_SELECTED_AVERAGE	    0x12  /* 0x10 & 0x02 */
     #define HMPS_SELECTED_CONTACT	    0x22  /* 0x20 & 0x02 */
     #define HMPS_SELECTED_SPARE_1	    0x42  /* 0x40 & 0x02 */
     #define HMPS_SELECTED_SPARE_2	    0x82  /* 0x80 & 0x02 */

     int testHMPSBeamFlag(gsfSwathBathyPing *p, int beam, int category);
     int setHMPSBeamFlag(gsfSwathBathyPing *p, int beam, int flag);
     int clearHMPSBeamFlag(gsfSwathBathyPing *p, int beam, int category, int flag);

#endif
